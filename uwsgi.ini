[uwsgi]

; 使用nginx连接时使用
socket = 0.0.0.0:8000

; 直接做web服务器使用，指定要监听的ip和端口号，即我们运行项目时的ip和端口
; http = 0.0.0.0:8000

; 项目目录
chdir = /var/www/html/library_system

; 项目中的wsgi.py文件的目录
module = library_system.wsgi:application

; 静态文件映射，测试uwsgi配置时为了能够访问到静态资源，所以加上这个配置。在使用nginx时，需要注销掉这个配置，改用nginx来代理静态资源访>问
; 可使用 python manage.py collectstatic
static-map=/static=/var/www/html/library_system/static

; 指定启动的工作进程数
processes = 4

; 指定每个进程中的线程数
threads = 2

; 指定在工作进程中存在一个主进程
master = True

; 服务停止时自动移除unix Socket和pid文件
vacuum = True

; 保存启动之后主进程的进程号
pidfile = uwsgi.pid

; 设置uwsgi后台运行,运行信息保存在uwsgi.log
; 切记在docker中使用uwsgi记录日志时，指定日志目录需要使用logto，而不是daemonize，否则会导致容器直接退出
; daemonize = uwsgi.log
logto = uwsgi.log

; 单个日志的大小
buffer-size=32768

; 设置每个工作进程处理请求的上限，达到上限时，将回收（重启）该进程。可以预防内存泄漏
max-requests=5000
